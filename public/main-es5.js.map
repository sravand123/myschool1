{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-login/admin-login.component.html","webpack:///./src/app/admin-signup/admin-signup.component.html","webpack:///./src/app/app.component.html","webpack:///./src/app/class-details/class-details.component.html","webpack:///./src/app/class-form/class-form.component.html","webpack:///./src/app/index/index.component.html","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/student-details/student-details.component.html","webpack:///./src/app/student-form/student-form.component.html","webpack:///./src/app/student-update/student-update.component.html","webpack:///./src/app/subject-details/subject-details.component.html","webpack:///./src/app/subject-form/subject-form.component.html","webpack:///./src/app/teacher-details/teacher-details.component.html","webpack:///./src/app/teacher-form/teacher-form.component.html","webpack:///./src/app/teacher-update/teacher-update.component.html","webpack:///./src/app/test-form/test-form.component.html","webpack:///./src/app/test-marks/test-marks.component.html","webpack:///./src/app/admin-login/admin-login.component.css","webpack:///./src/app/admin-login/admin-login.component.ts","webpack:///./src/app/admin-signup/admin-signup.component.css","webpack:///./src/app/admin-signup/admin-signup.component.ts","webpack:///./src/app/admin-signup/admin.ts","webpack:///./src/app/all-in-one.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authentication.service.ts","webpack:///./src/app/class-details-resolver.service.ts","webpack:///./src/app/class-details/class-details.component.css","webpack:///./src/app/class-details/class-details.component.ts","webpack:///./src/app/class-form/class-form.component.css","webpack:///./src/app/class-form/class-form.component.ts","webpack:///./src/app/index-resolver.service.ts","webpack:///./src/app/index/index.component.css","webpack:///./src/app/index/index.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/resolvers/class-resolver.service.ts","webpack:///./src/app/resolvers/student-resolver.service.ts","webpack:///./src/app/resolvers/subject-resolver.service.ts","webpack:///./src/app/resolvers/teacher-resolver.service.ts","webpack:///./src/app/student-details/student-details.component.css","webpack:///./src/app/student-details/student-details.component.ts","webpack:///./src/app/student-form/form.service.ts","webpack:///./src/app/student-form/student-form.component.css","webpack:///./src/app/student-form/student-form.component.ts","webpack:///./src/app/student-form/student.ts","webpack:///./src/app/student-update/student-update.component.css","webpack:///./src/app/student-update/student-update.component.ts","webpack:///./src/app/subject-details-resolver.service.ts","webpack:///./src/app/subject-details/subject-details.component.css","webpack:///./src/app/subject-details/subject-details.component.ts","webpack:///./src/app/subject-form/subject-form.component.css","webpack:///./src/app/subject-form/subject-form.component.ts","webpack:///./src/app/teacher-details/teacher-details.component.css","webpack:///./src/app/teacher-details/teacher-details.component.ts","webpack:///./src/app/teacher-form/class.ts","webpack:///./src/app/teacher-form/teacher-form.component.css","webpack:///./src/app/teacher-form/teacher-form.component.ts","webpack:///./src/app/teacher-form/teacher.ts","webpack:///./src/app/teacher-update/teacher-update.component.css","webpack:///./src/app/teacher-update/teacher-update.component.ts","webpack:///./src/app/test-form/test-form.component.css","webpack:///./src/app/test-form/test-form.component.ts","webpack:///./src/app/test-form/test.ts","webpack:///./src/app/test-marks-resolver.service.ts","webpack:///./src/app/test-marks/test-marks.component.css","webpack:///./src/app/test-marks/test-marks.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\n    <h2>Admin LogIn</h2>\\n    <form class=\\\"form-horizontal\\\"  (ngSubmit)='onSubmit()' novalidate #myForm=\\\"ngForm\\\" method=\\\"POST\\\" role=\\\"form\\\">\\n     <strong [class.d-none]='!errorMsg' class='text-danger'>admin already exists</strong>\\n     <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"username\\\">username:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" [class.is-invalid]=\\\"username.invalid && username.touched\\\" class=\\\"form-control\\\" id=\\\"username_name\\\" placeholder=\\\"Enter username \\\" name=\\\"username\\\" [(ngModel)]='admin.username' #username =\\\"ngModel\\\" required>\\n          <small class=\\\"text-danger\\\" [class.d-none]='username.valid || username.untouched'>username  is required</small>\\n  \\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"password\\\">Password:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [class.is-invalid]='password.touched && password.invalid' placeholder=\\\"Enter Password\\\" name=\\\"password\\\" [(ngModel)]='admin.password' #password=\\\"ngModel\\\" required>\\n          <small class=\\\"text-danger\\\" [class.d-none]='password.valid || password.untouched '>password is required</small>\\n  \\n        </div>\\n      </div><div class=\\\"form-group\\\">        \\n          <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n            <button  [disabled]=\\\"myForm.invalid  || clicked\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Login<span [class.d-none]=\\\"!clicked\\\" class=\\\"spinner-border spinner-border-sm text-light ml-1\\\" role=\\\"status\\\">\\n                <span class=\\\"sr-only\\\">Loading...</span>\\n            </span></button>\\n          </div>\\n        </div>\\n\\n      </form>\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n    <h2>Admin Signup</h2>\\n    <form class=\\\"form-horizontal\\\"  (ngSubmit)='onSubmit()' novalidate #myForm=\\\"ngForm\\\" method=\\\"POST\\\" role=\\\"form\\\">\\n     <strong [class.d-none]='!errorMsg' class='text-danger'>admin already exists</strong>\\n     <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"username\\\">username:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" [class.is-invalid]=\\\"username.invalid && username.touched\\\" class=\\\"form-control\\\" id=\\\"username_name\\\" placeholder=\\\"Enter username \\\" name=\\\"username\\\" [(ngModel)]='admin.username' #username =\\\"ngModel\\\" required>\\n          <small class=\\\"text-danger\\\" [class.d-none]='username.valid || username.untouched'>username  is required</small>\\n  \\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"password\\\">Password:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [class.is-invalid]='password.touched && password.invalid' placeholder=\\\"Enter Password\\\" name=\\\"password\\\" [(ngModel)]='admin.password' #password=\\\"ngModel\\\" required>\\n          <small class=\\\"text-danger\\\" [class.d-none]='password.valid || password.untouched '>password is required</small>\\n  \\n        </div>\\n      </div><div class=\\\"form-group\\\">        \\n          <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n            <button  [disabled]=\\\"myForm.invalid  || clicked\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">SignUp<span [class.d-none]=\\\"!clicked\\\" class=\\\"spinner-border spinner-border-sm text-light ml-1\\\" role=\\\"status\\\">\\n                <span class=\\\"sr-only\\\">Loading...</span>\\n            </span></button>\\n          </div>\\n        </div>\\n\\n      </form>\\n</div>\\n\"","module.exports = \"<ng2-slim-loading-bar></ng2-slim-loading-bar>  \\n\\n<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<mat-tab-group>\\n        <mat-tab label=\\\"Students\\\" >\\n                <mat-form-field>\\n                        <input matInput (keyup)=\\\"applyFilter1($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n                        </mat-form-field>\\n                        <table mat-table [dataSource]=\\\"dataSource1\\\" class=\\\"mat-elevation-z8\\\">\\n                \\n                        <ng-container matColumnDef=\\\"position\\\">\\n                                <th mat-header-cell *matHeaderCellDef> No. </th>\\n                                <td mat-cell *matCellDef=\\\"let element;let i = index\\\"> {{i+1}} </td>\\n                        </ng-container>\\n                        \\n                        <ng-container matColumnDef=\\\"name\\\">\\n                                <th mat-header-cell *matHeaderCellDef> Name </th>\\n                                <td mat-cell *matCellDef=\\\"let element \\\"><a href=\\\"students/{{element._id}}\\\">{{element.name}}</a></td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"roll\\\">\\n                                <th mat-header-cell *matHeaderCellDef> Roll </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.roll}} </td>\\n                        </ng-container>\\n                        \\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns1\\\"></tr>\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns1;\\\"></tr>\\n                        </table>\\n                                              \\n         </mat-tab>\\n        <mat-tab label=\\\"Teachers\\\">\\n        <mat-form-field>\\n                <input matInput (keyup)=\\\"applyFilter2($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n        </mat-form-field>\\n        <table mat-table [dataSource]=\\\"dataSource2\\\" class=\\\"mat-elevation-z8\\\">\\n\\n                <!--- Note that these columns can be defined in any order.\\n                        The actual rendered columns are set as a property on the row definition\\\" -->\\n                \\n                <!-- Position Column -->\\n                <ng-container matColumnDef=\\\"position\\\">\\n                <th mat-header-cell *matHeaderCellDef> No. </th>\\n                <td mat-cell *matCellDef=\\\"let element;let i = index\\\"> {{i+1}} </td>\\n                </ng-container>\\n                \\n                <!-- Name Column -->\\n                <ng-container matColumnDef=\\\"name\\\">\\n                <th mat-header-cell *matHeaderCellDef> Name </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"><a href=\\\"teachers/{{element._id}}\\\">{{element.name}}</a></td>\\n                </ng-container>\\n                \\n                <!-- Weight Column -->\\n                <ng-container matColumnDef=\\\"subject\\\">\\n                        <th mat-header-cell *matHeaderCellDef> subject </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.subject.subject}} </td>\\n                </ng-container>\\n                <!-- Symbol Column -->\\n                <ng-container matColumnDef=\\\"phone\\\">\\n                <th mat-header-cell *matHeaderCellDef> phone </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.phone}} </td>\\n                </ng-container>\\n                \\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                </table>\\n        </mat-tab>\\n        <mat-tab label=\\\"Mark List\\\">\\n                <ul class='list-group'>\\n                  <li class='list-group-item' *ngFor='let test of Information.test'><a href=\\\"tests/{{test._id}}\\\">{{test.test}}</a></li>\\n                </ul><br>\\n                <a href=\\\"tests/create\\\"><button class='btn btn-primary'>Add test</button></a>\\n        </mat-tab>\\n</mat-tab-group>\\n\"","module.exports = \"<form class=\\\"form-horizontal\\\"  (ngSubmit)='onSubmit()' novalidate #myForm=\\\"ngForm\\\" method=\\\"POST\\\" role=\\\"form\\\">\\n    \\n    <strong [class.d-none]='!errorMsg' class='text-danger'>Class already exists</strong>\\n     <div class=\\\"form-group\\\">\\n       <label class=\\\"control-label col-sm-2\\\" for=\\\"Class\\\">Class:</label>\\n       <div class=\\\"col-sm-10\\\">\\n         <input type=\\\"number\\\" class=\\\"form-control\\\" [class.is-invalid]='Class.touched && Class.invalid' id=\\\"Class\\\" #Class=\\\"ngModel\\\" placeholder=\\\"Enter class\\\" name=\\\"Class\\\" [(ngModel)]='class_.Class' required>\\n         <small class=\\\"text-danger\\\" [class.d-none]='Class.valid || Class.untouched'>class is required</small>\\n       </div>\\n     </div>\\n     <div class=\\\"form-group\\\">        \\n        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n          <button  [disabled]=\\\"myForm.invalid  || clicked\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add Class<span [class.d-none]=\\\"!clicked\\\" class=\\\"spinner-border spinner-border-sm text-light m-1\\\" role=\\\"status\\\">\\n              <span class=\\\"sr-only\\\">Loading...</span>\\n          </span></button>\\n        </div>\\n      </div>\\n</form>\\n\"","module.exports = \"<mat-tab-group>\\n    <mat-tab label=\\\"students\\\" >  \\n      <div class=\\\"container\\\" style=\\\"padding: 20px;\\\">\\n          <mat-form-field>\\n              <input matInput (keyup)=\\\"applyFilter1($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n            </mat-form-field>\\n              <table mat-table [dataSource]=\\\"dataSource1\\\" class=\\\"mat-elevation-z8\\\">\\n          \\n                  <ng-container matColumnDef=\\\"position\\\">\\n                    <th mat-header-cell *matHeaderCellDef> No. </th>\\n                    <td mat-cell *matCellDef=\\\"let element;let i = index\\\"> {{i+1}} </td>\\n                  </ng-container>\\n                \\n                  <ng-container matColumnDef=\\\"name\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Name </th>\\n                    <td mat-cell *matCellDef=\\\"let element \\\"><a href=\\\"students/{{element._id}}\\\">{{element.name}}</a></td>\\n                  </ng-container>\\n                \\n                  <ng-container matColumnDef=\\\"class\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Class </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.class.class}} </td>\\n                  </ng-container>\\n                \\n                  <ng-container matColumnDef=\\\"roll\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Roll </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.roll}} </td>\\n                  </ng-container>\\n                \\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns1\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns1;\\\"></tr>\\n                </table>\\n      </div>\\n      <div  style=\\\"padding: 10px;\\\">\\n        <a href=\\\"students/create\\\"><button class=\\\"btn btn-primary\\\">Add student</button></a>\\n      </div>\\n       \\n              \\n     </mat-tab>\\n    <mat-tab label=\\\"Teachers\\\">\\n      <div *ngIf=\\\"show\\\" class=\\\"container\\\" style=\\\"padding: 20px;\\\">\\n          <mat-form-field>\\n              <input matInput (keyup)=\\\"applyFilter2($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n      </mat-form-field>\\n      <table mat-table [dataSource]=\\\"dataSource2\\\" class=\\\"mat-elevation-z8\\\">\\n\\n          <!--- Note that these columns can be defined in any order.\\n                The actual rendered columns are set as a property on the row definition\\\" -->\\n        \\n          <!-- Position Column -->\\n          <ng-container matColumnDef=\\\"position\\\">\\n            <th mat-header-cell *matHeaderCellDef> No. </th>\\n            <td mat-cell *matCellDef=\\\"let element;let i = index\\\"> {{i+1}} </td>\\n          </ng-container>\\n        \\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef> Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"><a href=\\\"teachers/{{element._id}}\\\">{{element.name}}</a></td>\\n          </ng-container>\\n        \\n          <!-- Weight Column -->\\n          <ng-container matColumnDef=\\\"subject\\\">\\n                  <th mat-header-cell *matHeaderCellDef> subject </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.subject.subject}} </td>\\n          </ng-container>\\n          <!-- Symbol Column -->\\n          <ng-container matColumnDef=\\\"phone\\\">\\n            <th mat-header-cell *matHeaderCellDef> phone </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.phone}} </td>\\n          </ng-container>\\n        \\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n        </table>\\n      </div>\\n      <div  *ngIf=\\\"show\\\" style=\\\"padding: 10px;\\\">\\n          <a href=\\\"teachers/create\\\"><button class=\\\"btn btn-primary\\\">Add Teacher</button></a>\\n     </div>\\n     <div *ngIf=\\\"!show\\\" style = \\\"padding-top:15%;padding-left:35%;\\\">\\n        <i class=\\\"fas fa-spinner fa-pulse fa-6x\\\"></i>\\n     </div>\\n\\n       \\n    </mat-tab>\\n    <mat-tab label =\\\"Classes\\\">\\n      <div *ngIf=\\\"show\\\">\\n          <ul class=\\\"list-group\\\">\\n              <li class=\\\"list-group-item\\\" *ngFor='let item of classes'><a href=\\\"classes/{{item._id}}\\\">{{item.class}}th class</a></li>\\n          </ul>\\n          <div  style=\\\"padding: 10px;\\\">\\n              <a href=\\\"classes/create\\\"><button class=\\\"btn btn-primary\\\">Add Class</button></a>\\n         </div>\\n      </div>  \\n      <div *ngIf=\\\"!show\\\" style = \\\"padding-top:15%;padding-left:35%;\\\">\\n          <i class=\\\"fas fa-spinner fa-pulse fa-6x\\\"></i>\\n      </div>\\n    </mat-tab>\\n    <mat-tab label =\\\"Subjects\\\">\\n      <div *ngIf=\\\"show\\\">\\n          <ul class=\\\"list-group\\\">\\n              <li class=\\\"list-group-item\\\" *ngFor='let item of subjects'><a href=\\\"subjects/{{item._id}}\\\">{{item.subject}}</a></li>\\n           </ul>\\n           <div  style=\\\"padding: 10px;\\\">\\n              <a href=\\\"subjects/create\\\"><button class=\\\"btn btn-primary\\\">Add subject</button></a>\\n         </div>\\n      </div>\\n      <div *ngIf=\\\"!show\\\" style = \\\"padding-top:15%;padding-left:35%;\\\">\\n          <i class=\\\"fas fa-spinner fa-pulse fa-6x\\\"></i>\\n      </div>\\n        \\n    </mat-tab>\\n    \\n</mat-tab-group>\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">SCHOOL</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"admin/login\\\">Login <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li *ngIf='isLoggedIn()' class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link \\\" href=\\\"index\\\">Index</a>\\n          </li>\\n       <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link \\\" href=\\\"admin/signup\\\">Create new Account</a>\\n        </li>\\n        <li *ngIf='isLoggedIn()' class=\\\"nav-item dropdown active\\\">\\n          <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            <i class=\\\"fa fa-user\\\"></i>\\n          </a>\\n          <div  class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">profile</a>\\n            <a class=\\\"dropdown-item\\\"  (click)='logOut()'  >Logout</a>\\n          </div>\\n         \\n        </li>\\n\\n      </ul>  \\n    </div>\\n</nav>\\n\\n\"","module.exports = \"<mat-tab-group>\\n  <mat-tab label='Details'>\\n      <div class='container' style=\\\"padding-left: 20%;padding-top: 10%;\\\" >\\n          <mat-card class=\\\"example-card\\\" style=\\\"width:80%;\\\">\\n                  <mat-card-content>\\n                     <h6>Name : {{student.name}}</h6> \\n                     <h6>Class :{{student.class.class}}</h6>\\n                     <h6>Roll : {{student.roll}}</h6>\\n                     <h6>Father Name : {{student.father_name}}</h6>\\n                     <h6>Mother Nmae : {{student.mother_name}}</h6>\\n                     <h6>Date of Birth : {{student.dob | date:'mediumDate'}}</h6>\\n                     <h6>Aadhar Number : {{student.aadhar}}</h6>\\n                  </mat-card-content>\\n                  <mat-card-actions>\\n                    <a href=\\\"students/update/{{student._id}}\\\"><button mat-raised-button color=\\\"primary\\\" >Update</button></a>\\n                  </mat-card-actions>\\n                </mat-card>\\n     \\n</div>\\n  </mat-tab>\\n  <mat-tab label=\\\"Marks\\\">\\n   \\n  </mat-tab>\\n\\n</mat-tab-group>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h2> student details</h2>\\n  <form class=\\\"form-horizontal\\\"  (ngSubmit)='onSubmit()' novalidate #myForm=\\\"ngForm\\\" method=\\\"POST\\\" role=\\\"form\\\">\\n   <strong [class.d-none]='!errorMsg' class='text-danger'>Sudent already exists</strong>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" for=\\\"name\\\">Full name:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]='name.touched && name.invalid' id=\\\"name\\\" #name=\\\"ngModel\\\" placeholder=\\\"Enter student name\\\" name=\\\"name\\\" [(ngModel)]='student.name' required>\\n        <small class=\\\"text-danger\\\" [class.d-none]='name.valid || name.untouched'>Name is required</small>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" for=\\\"class\\\">class:</label>\\n      <div class=\\\"col-sm-10\\\">\\n       <select (blur)=\\\"validateClass(Class.value)\\\" (change)=\\\"validateClass(Class.value)\\\" #Class=\\\"ngModel\\\" class=\\\"form-control\\\" name=\\\"class\\\" placeholder=\\\"select class\\\" [class.is-invalid]=\\\"classEroor && Class.touched\\\" [(ngModel)]='student.Class'>\\n            <option value=\\\"default\\\">Select class</option>\\n            <option *ngFor='let class of classes' value= {{class._id}} >{{class.class}}</option>\\n        </select>\\n        <small class=\\\"text-danger\\\" [class.d-none]='!classEroor || Class.untouched '>Please select a class</small>\\n\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" for=\\\"roll\\\">roll no:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" [class.is-invalid]='roll.touched && roll.invalid ' id=\\\"roll\\\" #roll=\\\"ngModel\\\" placeholder=\\\"Enter student roll number\\\" name=\\\"roll\\\" [(ngModel)]='student.roll' required>\\n        <small class=\\\"text-danger\\\" [class.d-none]='roll.valid || roll.untouched'>Roll number is required</small>\\n\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" for=\\\"dob\\\">dob:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"dob\\\" placeholder=\\\"Enter dob\\\" name=\\\"dob\\\" [(ngModel)]='student.dob'  required>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" for=\\\"father_name\\\">Father name:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" [class.is-invalid]=\\\"father.invalid && father.touched\\\" class=\\\"form-control\\\" id=\\\"father_name\\\" placeholder=\\\"Enter Father name\\\" name=\\\"father_name\\\" [(ngModel)]='student.father_name' #father =\\\"ngModel\\\" required>\\n        <small class=\\\"text-danger\\\" [class.d-none]='father.valid || father.untouched'>Father name is required</small>\\n\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" for=\\\"mother_name\\\">Mother name:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"mother_name\\\" [class.is-invalid]='mother.touched && mother.invalid' placeholder=\\\"Enter Mother name\\\" name=\\\"mother_name\\\" [(ngModel)]='student.mother_name' #mother=\\\"ngModel\\\" required>\\n        <small class=\\\"text-danger\\\" [class.d-none]='mother.valid || mother.untouched'>Mother name is required</small>\\n\\n      </div>\\n    </div>\\n      <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" for=\\\"aadhar\\\">Aadhar number:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"aadhar\\\" [class.is-invalid]='aadhar.touched && aadhar.invalid' placeholder=\\\"Enter Aadhar\\\" name=\\\"aadhar\\\" [(ngModel)]='student.aadhar' pattern=\\\"^\\\\d{12}$\\\" #aadhar='ngModel' required>\\n       <div *ngIf=\\\"aadhar.errors && (aadhar.touched && aadhar.invalid)\\\">\\n          <small class=\\\"text-danger\\\" *ngIf=\\\"aadhar.errors.required\\\">aadhar number is required</small>\\n          <small class=\\\"text-danger\\\" *ngIf=\\\"aadhar.errors.pattern\\\">aadhar number must be 12 digit</small>\\n       </div>\\n\\n      </div>\\n    </div>\\n \\n    <div class=\\\"form-group\\\">        \\n      <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n        <button  [disabled]=\\\"myForm.invalid ||classEroor || clicked\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add student<span [class.d-none]=\\\"!clicked\\\" class=\\\"spinner-border spinner-border-sm text-light m-1\\\" role=\\\"status\\\">\\n            <span class=\\\"sr-only\\\">Loading...</span>\\n        </span></button>\\n      </div>\\n    </div>\\n  </form>\\n  \\n  \\n</div>\\n\\n\\n\\n\"","module.exports = \"<div class=\\\"container\\\">\\n    <h2> student details</h2>\\n    <form class=\\\"form-horizontal\\\"  (ngSubmit)='onSubmit()' novalidate #myForm=\\\"ngForm\\\" method=\\\"POST\\\" role=\\\"form\\\">\\n     <strong [class.d-none]='!errorMsg' class='text-danger'>Sudent already exists</strong>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"name\\\">Full name:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]='name.touched && name.invalid' id=\\\"name\\\" #name=\\\"ngModel\\\" placeholder=\\\"Enter student name\\\" name=\\\"name\\\" [(ngModel)]='student.name' required>\\n          <small class=\\\"text-danger\\\" [class.d-none]='name.valid || name.untouched'>Name is required</small>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"class\\\">class:</label>\\n        <div class=\\\"col-sm-10\\\">\\n         <select (blur)=\\\"validateClass(Class.value)\\\" (change)=\\\"validateClass(Class.value)\\\" #Class=\\\"ngModel\\\" class=\\\"form-control\\\" name=\\\"class\\\" placeholder=\\\"select class\\\" [class.is-invalid]=\\\"classEroor && Class.touched\\\" [(ngModel)]='student.Class'>\\n              <option value=\\\"default\\\">Select class</option>\\n              <option *ngFor='let class of classes' value= {{class._id}} >{{class.class}}</option>\\n          </select>\\n          <small class=\\\"text-danger\\\" [class.d-none]='!classEroor || Class.untouched '>Please select a class</small>\\n  \\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"roll\\\">roll no:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [class.is-invalid]='roll.touched && roll.invalid ' id=\\\"roll\\\" #roll=\\\"ngModel\\\" placeholder=\\\"Enter student roll number\\\" name=\\\"roll\\\" [(ngModel)]='student.roll' required>\\n          <small class=\\\"text-danger\\\" [class.d-none]='roll.valid || roll.untouched'>Roll number is required</small>\\n  \\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"dob\\\">dob:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"dob\\\" placeholder=\\\"Enter dob\\\" name=\\\"dob\\\" [(ngModel)]='student.dob'  required>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"father_name\\\">Father name:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" [class.is-invalid]=\\\"father.invalid && father.touched\\\" class=\\\"form-control\\\" id=\\\"father_name\\\" placeholder=\\\"Enter Father name\\\" name=\\\"father_name\\\" [(ngModel)]='student.father_name' #father =\\\"ngModel\\\" required>\\n          <small class=\\\"text-danger\\\" [class.d-none]='father.valid || father.untouched'>Father name is required</small>\\n  \\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"mother_name\\\">Mother name:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"mother_name\\\" [class.is-invalid]='mother.touched && mother.invalid' placeholder=\\\"Enter Mother name\\\" name=\\\"mother_name\\\" [(ngModel)]='student.mother_name' #mother=\\\"ngModel\\\" required>\\n          <small class=\\\"text-danger\\\" [class.d-none]='mother.valid || mother.untouched'>Mother name is required</small>\\n  \\n        </div>\\n      </div>\\n        <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"aadhar\\\">Aadhar number:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"aadhar\\\" [class.is-invalid]='aadhar.touched && aadhar.invalid' placeholder=\\\"Enter Aadhar\\\" name=\\\"aadhar\\\" [(ngModel)]='student.aadhar' pattern=\\\"^\\\\d{12}$\\\" #aadhar='ngModel' required>\\n         <div *ngIf=\\\"aadhar.errors && (aadhar.touched && aadhar.invalid)\\\">\\n            <small class=\\\"text-danger\\\" *ngIf=\\\"aadhar.errors.required\\\">aadhar number is required</small>\\n            <small class=\\\"text-danger\\\" *ngIf=\\\"aadhar.errors.pattern\\\">aadhar number must be 12 digit</small>\\n         </div>\\n  \\n        </div>\\n      </div>\\n   \\n      <div class=\\\"form-group\\\">        \\n        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n          <button  [disabled]=\\\"myForm.invalid  ||classEroor || clicked\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Update Details<span [class.d-none]=\\\"!clicked\\\" class=\\\"spinner-border spinner-border-sm text-light m-1\\\" role=\\\"status\\\">\\n              <span class=\\\"sr-only\\\">Loading...</span>\\n          </span></button>\\n        </div>\\n      </div>\\n    </form>\\n   \\n    \\n  </div>\\n  \\n\\n\\n\\n  \\n  \"","module.exports = \"<mat-list role=\\\"list\\\">\\n    <mat-list-item role=\\\"listitem\\\" *ngFor='let item of teachers'><a href=\\\"teachers/{{item._id}}\\\">{{item.name}}</a></mat-list-item>\\n</mat-list>\"","module.exports = \"<p>\\n  subject-form works!\\n</p>\\n\"","module.exports = \"<div  class=\\\"container\\\" style=\\\"padding-left: 15%;padding-top: 10%;text-align:center;\\\" *ngIf=\\\"teacher\\\">\\n        <table class=\\\"table table-borderless\\\">\\n          <thead>\\n            <tr>\\n              <th colspan=\\\"3\\\" >{{teacher.name.toUpperCase()}}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n        <tr>\\n              <td>NAME</td>\\n              <td>{{teacher.name}}</td>\\n        </tr>\\n        <tr>\\n              <td>CLASS</td>\\n             \\n              <td>\\n                <a *ngFor=\\\"let cl of teacher.class\\\">\\n                    {{cl.class}}th\\n                </a> Class\\n                \\n              </td>\\n        </tr>\\n        <tr>\\n              <td>SUBJECT</td>\\n                <td>{{teacher.subject.subject}}</td>\\n        </tr>\\n        <tr>\\n              <td>PHONE</td>\\n              <td>{{teacher.phone}}</td>\\n        </tr>\\n        <tr>\\n              <td>EMAIL</td>\\n              <td>{{teacher.email}}</td>\\n        </tr>\\n       \\n            \\n          </tbody>\\n        </table>\\n        <br>\\n        \\n        <a href=\\\"teachers/update/{{teacher._id}}\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Update Details</button></a>\\n        \\n        </div>\\n               \\n          \"","module.exports = \"<div class=\\\"container\\\">\\n    <h2> Teacher Details</h2>\\n    <form class=\\\"form-horizontal\\\"  (ngSubmit)='onSubmit()' novalidate #myForm=\\\"ngForm\\\" method=\\\"POST\\\" role=\\\"form\\\">\\n     <strong [class.d-none]='!errorMsg' class='text-danger'>Teacher already exists</strong>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"name\\\">Full name:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]='name.touched && name.invalid' id=\\\"name\\\" #name=\\\"ngModel\\\" placeholder=\\\"Enter teacher name\\\" name=\\\"name\\\" [(ngModel)]='teacher.name' required>\\n          <small class=\\\"text-danger\\\" [class.d-none]='name.valid || name.untouched'>Name is required</small>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"class\\\">Select Subject:</label>\\n        <div class=\\\"col-sm-10\\\">\\n         <select (blur)=\\\"validateClass(subject.value)\\\" (change)=\\\"validateClass(subject.value)\\\" #subject=\\\"ngModel\\\" class=\\\"form-control\\\" name=\\\"subject\\\" placeholder=\\\"select subject\\\" [class.is-invalid]=\\\"subjectError && subject.touched\\\" [(ngModel)]='teacher.subject'>\\n              <option value=\\\"default\\\">Select subject</option>\\n              <option *ngFor='let subject of subjects' value= {{subject._id}} >{{subject.subject}}</option>\\n          </select>\\n          <small class=\\\"text-danger\\\" [class.d-none]='!subjectError || subject.untouched '>Please select a subject</small>\\n  \\n        </div>\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n          <mat-form-field>\\n              <mat-label>Select Classes</mat-label>\\n              <mat-select  multiple #Class =\\\"ngModel\\\"  name=\\\"Class\\\" [(ngModel)]=\\\"teacher.Class\\\">\\n                <mat-option *ngFor=\\\"let class of classes\\\" value={{class._id}}>{{class.class}}</mat-option>\\n              </mat-select>\\n          </mat-form-field>\\n      \\n        </div>\\n      \\n\\n      \\n      <div class=\\\"form-group \\\" >\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"phone\\\">phone number:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"phone\\\" [class.is-invalid]='phone.touched && phone.invalid' placeholder=\\\"Enter phone\\\" name=\\\"phone\\\" [(ngModel)]='teacher.phone' pattern=\\\"^\\\\d{10}$\\\" #phone='ngModel' required>\\n         <div *ngIf=\\\"phone.errors && (phone.touched && phone.invalid)\\\">\\n            <small class=\\\"text-danger\\\" *ngIf=\\\"phone.errors.required\\\">phone number is required</small>\\n            <small class=\\\"text-danger\\\" *ngIf=\\\"phone.errors.pattern\\\">phone number must be 10 digit</small>\\n         </div>\\n  \\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-2\\\" for=\\\"email\\\">Email</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" [class.is-invalid]='email.touched && email.invalid' id=\\\"email\\\" #email=\\\"ngModel\\\" placeholder=\\\"Enter  email\\\" name=\\\"email\\\" [(ngModel)]='teacher.email' [email]=\\\"true\\\" required>\\n            <div *ngIf=\\\"email.errors && (email.touched && email.invalid)\\\">\\n                <small class=\\\"text-danger\\\" *ngIf=\\\"email.errors.required\\\">email is required</small>\\n                <small class=\\\"text-danger\\\" *ngIf=\\\"email.errors.email\\\">Invalid email address</small>\\n             </div>           </div>\\n        </div>\\n\\n   \\n      <div class=\\\"form-group\\\">        \\n        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n          <button  [disabled]=\\\"myForm.invalid || subjectError || clicked\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add Teacher<span [class.d-none]=\\\"!clicked\\\" class=\\\"spinner-border spinner-border-sm text-light m-1\\\" role=\\\"status\\\">\\n              <span class=\\\"sr-only\\\">Loading...</span>\\n          </span></button>\\n        </div>\\n      </div>\\n    </form>\\n    \\n    \\n  </div>\\n  \\n  \\n\\n\\n \"","module.exports = \"<div class=\\\"container\\\">\\n    <h2> Teacher Details</h2>\\n    <form class=\\\"form-horizontal\\\"  (ngSubmit)='onSubmit()' novalidate #myForm=\\\"ngForm\\\" method=\\\"POST\\\" role=\\\"form\\\">\\n     <strong [class.d-none]='!errorMsg' class='text-danger'>Try submitting the form again</strong>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"name\\\">Full name:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]='name.touched && name.invalid' id=\\\"name\\\" #name=\\\"ngModel\\\" placeholder=\\\"Enter teacher name\\\" name=\\\"name\\\" [(ngModel)]='teacher.name' required>\\n          <small class=\\\"text-danger\\\" [class.d-none]='name.valid || name.untouched'>Name is required</small>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"class\\\">Select Subject:</label>\\n        <div class=\\\"col-sm-10\\\">\\n         <select (blur)=\\\"validateClass(subject.value)\\\" (change)=\\\"validateClass(subject.value)\\\" #subject=\\\"ngModel\\\" class=\\\"form-control\\\" name=\\\"subject\\\" placeholder=\\\"select subject\\\" [class.is-invalid]=\\\"subjectError && subject.touched\\\" [(ngModel)]='teacher.subject'>\\n              <option value=\\\"default\\\">Select subject</option>\\n              <option *ngFor='let subject of subjects' value= {{subject._id}} >{{subject.subject}}</option>\\n          </select>\\n          <small class=\\\"text-danger\\\" [class.d-none]='!subjectError || subject.untouched '>Please select a subject</small>\\n  \\n        </div>\\n      </div>\\n     \\n    <div class=\\\"form-group\\\">\\n      <mat-form-field>\\n          <mat-label>Select Classes</mat-label>\\n          <mat-select  multiple #Class =\\\"ngModel\\\"  name=\\\"Class\\\" [(ngModel)]=\\\"teacher.Class\\\">\\n            <mat-option *ngFor=\\\"let class of classes\\\" value={{class._id}}>{{class.class}}</mat-option>\\n          </mat-select>\\n      </mat-form-field>\\n  \\n    </div>\\n    \\n      <div class=\\\"form-group \\\" >\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"phone\\\">phone number:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"phone\\\" [class.is-invalid]='phone.touched && phone.invalid' placeholder=\\\"Enter phone\\\" name=\\\"phone\\\" [(ngModel)]='teacher.phone' pattern=\\\"^\\\\d{10}$\\\" #phone='ngModel' required>\\n         <div *ngIf=\\\"phone.errors && (phone.touched && phone.invalid)\\\">\\n            <small class=\\\"text-danger\\\" *ngIf=\\\"phone.errors.required\\\">phone number is required</small>\\n            <small class=\\\"text-danger\\\" *ngIf=\\\"phone.errors.pattern\\\">phone number must be 10 digit</small>\\n         </div>\\n  \\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-2\\\" for=\\\"email\\\">Email</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" [class.is-invalid]='email.touched && email.invalid' id=\\\"email\\\" #email=\\\"ngModel\\\" placeholder=\\\"Enter  email\\\" name=\\\"email\\\" [(ngModel)]='teacher.email' [email]=\\\"true\\\" required>\\n            <div *ngIf=\\\"email.errors && (email.touched && email.invalid)\\\">\\n                <small class=\\\"text-danger\\\" *ngIf=\\\"email.errors.required\\\">email is required</small>\\n                <small class=\\\"text-danger\\\" *ngIf=\\\"email.errors.email\\\">Invalid email address</small>\\n             </div>          </div>\\n        </div>\\n\\n   \\n      <div class=\\\"form-group\\\">        \\n        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n          <button  [disabled]=\\\"myForm.invalid || subjectError || clicked\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Update Details<span [class.d-none]=\\\"!clicked\\\" class=\\\"spinner-border spinner-border-sm text-light m-1\\\" role=\\\"status\\\">\\n              <span class=\\\"sr-only\\\">Loading...</span>\\n          </span></button>\\n        </div>\\n      </div>\\n    </form>\\n    \\n    \\n  </div>\\n\\n \\n\\n\\n \"","module.exports = \"<form class=\\\"form-horizontal\\\"  (ngSubmit)='onSubmit()' novalidate #myForm=\\\"ngForm\\\" method=\\\"POST\\\" role=\\\"form\\\">\\n    \\n        <strong [class.d-none]='!errorMsg' class='text-danger'>Test name already exists</strong>\\n         <div class=\\\"form-group\\\">\\n           <label class=\\\"control-label col-sm-2\\\" for=\\\"test\\\">Test:</label>\\n           <div class=\\\"col-sm-10\\\">\\n             <input type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]='Test.touched && Test.invalid' id=\\\"test\\\" #Test=\\\"ngModel\\\" placeholder=\\\"Enter Test\\\" name=\\\"test\\\" [(ngModel)]='test.name' required>\\n             <small class=\\\"text-danger\\\" [class.d-none]='Test.valid || Test.untouched'>Test name is required</small>\\n           </div>\\n         </div>\\n         <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2\\\" for=\\\"class\\\">class:</label>\\n                <div class=\\\"col-sm-10\\\">\\n                 <select (blur)=\\\"validateClass(Class.value)\\\" (change)=\\\"validateClass(Class.value)\\\" #Class=\\\"ngModel\\\" class=\\\"form-control\\\" name=\\\"class\\\" placeholder=\\\"select class\\\" [class.is-invalid]=\\\"classError && Class.touched\\\" [(ngModel)]='test.Class'>\\n                      <option value=\\\"default\\\">Select class</option>\\n                      <option *ngFor='let class of classes' value= {{class._id}} >{{class.class}}</option>\\n                  </select>\\n                  <small class=\\\"text-danger\\\" [class.d-none]='!classError || Class.untouched '>Please select a class</small>\\n          \\n                </div>\\n              </div>\\n         <div class=\\\"form-group\\\">        \\n            <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n              <button  [disabled]=\\\"myForm.invalid  || clicked || classError\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add Test<span [class.d-none]=\\\"!clicked\\\" class=\\\"spinner-border spinner-border-sm text-light m-1\\\" role=\\\"status\\\">\\n                  <span class=\\\"sr-only\\\">Loading...</span>\\n              </span></button>\\n            </div>\\n          </div>\\n    </form>\\n    \"","module.exports = \"        <ag-grid-angular #ag [class.d-none]='clicked'\\n        style=\\\"width: 100%; height: 50%;\\\" \\n        class=\\\"ag-theme-balham\\\"\\n        [rowData]=\\\"rowData\\\" \\n        [columnDefs]=\\\"columnDefs\\\"\\n      \\n        >\\n      </ag-grid-angular>\\n      <button class= 'btn btn-primary' [class.d-none]=\\\"clicked\\\" [disabled]='clicked'  (click)=\\\"onSubmit()\\\">submit<span [class.d-none]=\\\"!clicked\\\" class=\\\"spinner-border spinner-border-sm text-light m-1\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n      </span></button>\\n\\n<div [class.d-none]='!clicked' class='container' style =\\\"padding-top: 15%;padding-left: 40%\\\">\\n    <i style='color: silver' class=\\\"fas fa-sync fa-10x fa-spin\\\"></i>\\n</div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWxvZ2luL2FkbWluLWxvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Router } from '@angular/router';\nimport { FormService } from './../student-form/form.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Admin } from '../admin-signup/admin';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})\nexport class AdminLogInComponent implements OnInit {\n  public admin;\n  public clicked;\n  public errorMsg;\n  constructor( private formService: FormService, private router: Router) { }\n\n  ngOnInit() {\n    this.admin = new Admin('', '');\n    this.clicked = false;\n    this.errorMsg = false;\n  }\nonSubmit() {\n  this.clicked = true;\n  this.formService.loginAdmin(this.admin).subscribe(\n    (data) => {this.router.navigate(['index']); },\n    (err) => {this.clicked = false; this.errorMsg = true; }\n    );\n}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLXNpZ251cC9hZG1pbi1zaWdudXAuY29tcG9uZW50LmNzcyJ9 */\"","import { Router } from '@angular/router';\nimport { FormService } from './../student-form/form.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Admin } from './admin';\n\n@Component({\n  selector: 'app-admin-signup',\n  templateUrl: './admin-signup.component.html',\n  styleUrls: ['./admin-signup.component.css']\n})\nexport class AdminSignupComponent implements OnInit {\n  public admin;\n  public clicked;\n  public errorMsg;\n  constructor( private formService: FormService, private router: Router) { }\n\n  ngOnInit() {\n    this.admin = new Admin(\"\",\"\");\n    this.clicked = false;\n    this.errorMsg = false;\n  }\nonSubmit(){\n  this.clicked = true;\n  this.formService.signupAdmin(this.admin).subscribe(\n    res => console.log('HTTP response', res),\n    err => {this.clicked = false; this.errorMsg = true; } ,\n    () => {this.router.navigate(['admin', 'login']); }\n    );\n}\n\n}","export class Admin{\n    constructor(\n        username: string,\n        password: string\n    ){}\n}","import { Router } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\nimport { catchError } from 'rxjs/operators';\nimport { IStudent, IClass, ISubject, ITeacher, IMark, ICDetails } from './Interfaces';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, forkJoin } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AllInOneService {\n  private studentUrl = 'api/student/list';\n  private teacherUrl = 'api/teacher/list';\n  private subjectUrl = 'api/subject/list';\n  private classUrl = 'api/class/list';\n  private marksurl = 'api/marks';\n  private classDetailsUrl = 'api/class/';\n  private subjectDetailsUrl = 'api/subject/';\n\n  constructor(private http: HttpClient, private auth: AuthenticationService, private router: Router) { }\n\n  get_students(): Observable<IStudent[]> {\n    if (this.auth.isLoggedIn()) {\n      return this.http.get<IStudent[]>(this.studentUrl,\n      { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.handleError));\n    } else {\n     this.router.navigate(['']);\n   }\n  }\n\n  get_Classes(): Observable<IClass[]> {\n    if (this.auth.isLoggedIn()) {\n      return this.http.get<IClass[]>(this.classUrl,\n      { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.handleError));\n    } else {\n     this.router.navigate(['']);\n   }\n  }\n\n  get_Subjects(): Observable<ISubject[]> {\n    if (this.auth.isLoggedIn()) {\n      return this.http.get<ISubject[]>(this.subjectUrl,\n        { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.handleError));\n    } else {\n     this.router.navigate(['']);\n   }\n  }\n\n  get_Teachers(): Observable<ITeacher[]> {\n    if (this.auth.isLoggedIn()) {\n      return this.http.get<ITeacher[]>(this.teacherUrl,\n        { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.handleError));\n    } else {\n     this.router.navigate(['']);\n   }\n  }\n\n  get_Marks(): Observable<IMark[]> {\n    if (this.auth.isLoggedIn()) {\n      return this.http.get<IMark[]>(this.marksurl,\n        { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.handleError));\n    } else {\n     this.router.navigate(['']);\n   }\n  }\n\n  get_Class_Details(id): Observable<ICDetails> {\n    if (this.auth.isLoggedIn()) {\n      return this.http.get<ICDetails>(this.classDetailsUrl + id,\n        { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.handleError));\n    } else {\n     this.router.navigate(['']);\n   }\n  }\n  get_Subject_Details(id): Observable<ICDetails> {\n    if (this.auth.isLoggedIn()) {\n    return this.http.get<ICDetails>(this.subjectDetailsUrl + id,\n        { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.handleError));\n    } else {\n     this.router.navigate(['']);\n   }\n  }\n\n  get_Index_Details() {\n    if (this.auth.isLoggedIn()) {\n    // const students = this.http.get<IStudent[]>(this.studentUrl,\n    //   { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.handleError));\n    const classes = this.http.get<IClass[]>(this.classUrl,\n      { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.handleError));\n    const teachers = this.http.get<ITeacher[]>(this.teacherUrl,\n      { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.handleError));\n    const subjects = this.http.get<ISubject[]>(this.subjectUrl,\n      { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.handleError));\n    return forkJoin([classes, teachers, subjects]);\n    } else {\n      this.router.navigate(['']);\n    }\n\n\n  }\n  private handleError(errorResponse: HttpErrorResponse) {\n    if ( errorResponse.error instanceof ErrorEvent) {\n      console.error(`client side error : ${errorResponse.status}`);\n    } else {\n      console.error(`server side error : ${errorResponse.status}`);\n    }\n    return throwError(errorResponse.statusText);\n  }\n}\n","import { TestMarksResolverService } from './test-marks-resolver.service';\nimport { TestMarksComponent } from './test-marks/test-marks.component';\nimport { TestFormComponent } from './test-form/test-form.component';\nimport { IndexComponent } from './index/index.component';\nimport { IndexResolverService } from './index-resolver.service';\nimport { SubjectDetailsComponent } from './subject-details/subject-details.component';\nimport { SubjectDetailsResolverService } from './subject-details-resolver.service';\nimport { TeacherUpdateComponent } from './teacher-update/teacher-update.component';\nimport { TeacherFormComponent } from './teacher-form/teacher-form.component';\nimport { SubjectResolverService } from './resolvers/subject-resolver.service';\nimport { StudentUpdateComponent } from './student-update/student-update.component';\nimport { ClassDetailsComponent } from './class-details/class-details.component';\nimport { ClassDetailsResolverService } from './class-details-resolver.service';\nimport { TeacherDetailsComponent } from './teacher-details/teacher-details.component';\nimport { TeacherResolverService } from './resolvers/teacher-resolver.service';\nimport { ClassResolverService } from './resolvers/class-resolver.service';\nimport { StudentResolverService } from './resolvers/student-resolver.service';\nimport { AppComponent } from './app.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StudentDetailsComponent } from './student-details/student-details.component';\nimport { StudentFormComponent } from './student-form/student-form.component';\nimport { ClassFormComponent } from './class-form/class-form.component';\nimport { AdminSignupComponent } from './admin-signup/admin-signup.component';\nimport { AdminLogInComponent } from './admin-login/admin-login.component';\n\nconst routes: Routes = [\n  {path : 'index' , resolve: {student : StudentResolverService}, component: IndexComponent},\n  {path: 'students/create', resolve: {class_: ClassResolverService}, component: StudentFormComponent},\n  {path: 'teachers/create', resolve: {class_: ClassResolverService, subject : SubjectResolverService}, component: TeacherFormComponent},\n  {path: 'classes/create', component: ClassFormComponent},\n\n  {path: 'teachers/update/:id', resolve: {class_: ClassResolverService, subject : SubjectResolverService,\n    teacher : TeacherResolverService}, component: TeacherUpdateComponent},\n  {path: 'students/update/:id', resolve: {class: ClassResolverService, student : StudentResolverService},\n   component: StudentUpdateComponent},\n  { path: 'students/:id', resolve: { student : StudentResolverService}, component: StudentDetailsComponent},\n  { path: 'teachers/:id', resolve: { teacher : TeacherResolverService}, component: TeacherDetailsComponent},\n  { path: 'classes/:id', resolve: { classDetails : ClassDetailsResolverService}, component: ClassDetailsComponent},\n  { path: 'subjects/:id', resolve: { subjectDetails : SubjectDetailsResolverService}, component: SubjectDetailsComponent},\n  {path: 'tests/create', resolve: {class: ClassResolverService}, component: TestFormComponent},\n  {path: 'admin/signup', component: AdminSignupComponent},\n  {path: 'admin/login', component: AdminLogInComponent},\n  {path: 'tests/:id', resolve: {marks: TestMarksResolverService}, component: TestMarksComponent},\n  {path: '**', component: AdminLogInComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd , Event} from '@angular/router';\nimport { SlimLoadingBarService } from 'ng2-slim-loading-bar';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'myschool-website';\n  constructor(\n    private lBar: SlimLoadingBarService,\n    private  router: Router\n  ) {\n    this.router.events.subscribe((event: Event) => {\n      console.log(event);\n      this.loadingBarInterceptor(event);\n    });\n  }\n  private loadingBarInterceptor(event: Event) {\n    if (event instanceof NavigationStart) {\n      this.lBar.start();\n    }\n    if (event instanceof NavigationEnd) {\n      this.lBar.complete();\n    }\n  }\n}\n","import { TestMarksResolverService } from './test-marks-resolver.service';\nimport { IndexResolverService } from './index-resolver.service';\nimport { AdminSignupComponent } from './admin-signup/admin-signup.component';\nimport { AdminLogInComponent } from './admin-login/admin-login.component';\nimport { AuthenticationService } from './authentication.service';\nimport { FormService } from './student-form/form.service';\nimport { ClassFormComponent } from './class-form/class-form.component';\nimport { TeacherUpdateComponent } from './teacher-update/teacher-update.component';\nimport { TeacherFormComponent } from './teacher-form/teacher-form.component';\nimport { StudentUpdateComponent } from './student-update/student-update.component';\nimport { StudentFormComponent } from './student-form/student-form.component';\nimport { ClassDetailsResolverService } from './class-details-resolver.service';\nimport { TeacherResolverService } from './resolvers/teacher-resolver.service';\nimport { SubjectResolverService } from './resolvers/subject-resolver.service';\nimport { ClassResolverService } from './resolvers/class-resolver.service';\nimport { StudentResolverService } from './resolvers/student-resolver.service';\nimport { AllInOneService } from './all-in-one.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AgGridModule } from 'ag-grid-angular';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport {MatButtonModule, MatTableModule, MatCardModule,\n   MatTabsModule, MatFormFieldModule, MatInputModule, MatSelectModule, MatListModule} from '@angular/material';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SlimLoadingBarModule } from 'ng2-slim-loading-bar';\nimport { StudentDetailsComponent } from './student-details/student-details.component';\nimport { ClassDetailsComponent } from './class-details/class-details.component';\nimport { SubjectDetailsComponent } from './subject-details/subject-details.component';\nimport { TeacherDetailsComponent } from './teacher-details/teacher-details.component';\nimport { FormsModule } from '@angular/forms';\nimport { SubjectFormComponent } from './subject-form/subject-form.component';\nimport { IndexComponent } from './index/index.component';\nimport { TestFormComponent } from './test-form/test-form.component';\nimport { TestMarksComponent } from './test-marks/test-marks.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    StudentDetailsComponent,\n    ClassDetailsComponent,\n    SubjectDetailsComponent,\n    TeacherDetailsComponent,\n    StudentFormComponent,\n    StudentUpdateComponent,\n    TeacherFormComponent,\n    TeacherUpdateComponent,\n    ClassFormComponent,\n    SubjectFormComponent,\n    AdminLogInComponent,\n    AdminSignupComponent,\n    IndexComponent,\n    TestFormComponent,\n    TestMarksComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    SlimLoadingBarModule.forRoot(),\n    MatButtonModule,\n    HttpClientModule,\n    MatTableModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTabsModule,\n    MatListModule,\n    AgGridModule.withComponents([]),\n    FormsModule,\n    MatSelectModule,\n\n\n\n  ],\n  providers: [AllInOneService,\n              StudentResolverService,\n              ClassResolverService,\n              SubjectResolverService,\n              TeacherResolverService,\n              ClassDetailsResolverService,\n              FormService,\n              AuthenticationService,\n              IndexResolverService,\n              TestMarksResolverService\n             ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators/map';\nimport { Router } from '@angular/router';\n\nexport interface UserDetails {\n  _id: string;\n  username: string;\n  exp: number;\n  iat: number;\n}\n\nexport interface TokenResponse {\n  token: string;\n}\n\nexport interface TokenPayload {\n  email: string;\n  password: string;\n}\n\n@Injectable()\nexport class AuthenticationService {\n  public token: string;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  public saveToken(token: string): void {\n    localStorage.setItem('mean-token', token);\n    this.token = token;\n  }\n\n  public getToken(): string {\n    if (!this.token) {\n      this.token = localStorage.getItem('mean-token');\n    }\n    return this.token;\n  }\n\n  public getUserDetails(): UserDetails {\n    const token = this.getToken();\n    let payload;\n    if (token) {\n      payload = token.split('.')[1];\n      payload = window.atob(payload);\n      return JSON.parse(payload);\n    } else {\n      return null;\n    }\n  }\n\n  public isLoggedIn(): boolean {\n    const user = this.getUserDetails();\n    if (user) {\n      return user.exp > Date.now() / 1000;\n    } else {\n      return false;\n    }\n  }\n\n  public logout(): void {\n    this.token = '';\n    window.localStorage.removeItem('mean-token');\n    this.router.navigateByUrl('/');\n  }\n\n}\n","import { catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Observable';\nimport { Resolve, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\nimport { AllInOneService } from './all-in-one.service';\nimport { Injectable } from '@angular/core';\nimport { ICDetails } from './Interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClassDetailsResolverService implements Resolve<ICDetails | string> {\n\n  constructor(private classDetailService: AllInOneService) { }\n  resolve(route: ActivatedRouteSnapshot , state: RouterStateSnapshot): Observable<ICDetails | string> {\n\n    return this.classDetailService.get_Class_Details(route.params.id)\n    .pipe(catchError((err: string) => {\n      return Observable.of(err);\n}));\n  }\n}\n","module.exports = \"table {\\n    width: 50%;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2xhc3MtZGV0YWlscy9jbGFzcy1kZXRhaWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9jbGFzcy1kZXRhaWxzL2NsYXNzLWRldGFpbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgICB3aWR0aDogNTAlO1xufVxuXG4iXX0= */\"","import { AllInOneService } from './../all-in-one.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatTableDataSource } from '@angular/material';\n\n@Component({\n  selector: 'app-class-details',\n  templateUrl: './class-details.component.html',\n  styleUrls: ['./class-details.component.css']\n})\nexport class ClassDetailsComponent implements OnInit {\n\n  public Information;\n  public columnDefs;\n  public test;\n  public rowData;\n  public dataSource1;\n  public dataSource2;\n  displayedColumns1: string[];\n  displayedColumns2: string[];\n  constructor( private classService: AllInOneService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n\n      this.Information = this.route.snapshot.data.classDetails;\n\n      this.displayedColumns1 = ['position', 'name', 'roll'];\n      this.displayedColumns2 = ['position', 'name', 'subject', 'phone'];\n\n      this.dataSource1 = new MatTableDataSource(this.Information.student);\n      this.dataSource2 = new MatTableDataSource(this.Information.teacher);\n  }\n  applyFilter1(filterValue: string) {\n    this.dataSource1.filter = filterValue.trim().toLowerCase();\n  }\n  applyFilter2(filterValue: string) {\n    this.dataSource2.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsYXNzLWZvcm0vY2xhc3MtZm9ybS5jb21wb25lbnQuY3NzIn0= */\"","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { FormService } from '../student-form/form.service';\nimport { Class } from '../teacher-form/class';\n@Component({\n  selector: 'app-class-form',\n  templateUrl: './class-form.component.html',\n  styleUrls: ['./class-form.component.css']\n})\nexport class ClassFormComponent implements OnInit {\n  public class_;\n  public clicked;\n  public errorMsg;\n  constructor(private formService : FormService , private router : Router) { }\n\n  ngOnInit() {\n        this.class_ = new Class(1);\n        this.errorMsg = false;\n        this.clicked = false;\n  }\n  onSubmit(){\n    this.clicked = true;\n    this.formService.submitClass(this.class_).subscribe(\n      res => console.log('HTTP response', res),\n      err => {this.clicked = false; this.errorMsg = true; } ,\n      () => {this.router.navigate(['classes']); }\n    )\n  }\n\n\n}\n","import { Observable } from 'rxjs/Observable';\nimport { AllInOneService } from './all-in-one.service';\nimport { Injectable } from '@angular/core';\nimport { Resolve, RouterStateSnapshot, ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IndexResolverService implements Resolve<any> {\n\n  constructor(private service : AllInOneService) { }\n\n  resolve( route : ActivatedRouteSnapshot, state : RouterStateSnapshot): Observable<any>{\n       return this.service.get_Index_Details();\n  }\n}\n","module.exports = \"table {\\n    width: 70%;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW5kZXgvaW5kZXguY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2luZGV4L2luZGV4LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gICAgd2lkdGg6IDcwJTtcbn1cblxuIl19 */\"","import { AllInOneService } from './../all-in-one.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent implements OnInit {\n  public information = [];\n  public students;\n  public classes;\n  public subjects;\n  public teachers;\n  public show;\n  public dataSource1;\n  public dataSource2;\n  displayedColumns1: string[];\n  displayedColumns2: string[];\n\n  constructor( private route: ActivatedRoute, private service: AllInOneService) { }\n\n  ngOnInit() {\n    this.show = false;\n    this.students = this.route.snapshot.data.student;\n    this.service.get_Index_Details().subscribe((data) => {\n      this.information = data;\n      this.classes = this.information[0];\n      this.teachers = this.information[1];\n      this.subjects = this.information[2];\n      this.dataSource2 = new MatTableDataSource(this.teachers);\n      this.show = true;\n    });\n    this.displayedColumns1 = ['position', 'name', 'class', 'roll'];\n    this.displayedColumns2 = ['position', 'name', 'subject', 'phone'];\n\n    this.dataSource1 = new MatTableDataSource(this.students);\n  }\n\n  applyFilter1(filterValue: string) {\n    this.dataSource1.filter = filterValue.trim().toLowerCase();\n  }\n  applyFilter2(filterValue: string) {\n    this.dataSource2.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n\n","module.exports = \"a {\\n    cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn0iXX0= */\"","import { AuthenticationService } from './../authentication.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor( private auth : AuthenticationService) { }\n\n  ngOnInit() {\n  }\n  logOut(){\n    this.auth.logout();\n  }\n\n  isLoggedIn(){\n    return this.auth.isLoggedIn();\n  }\n \n}\n","import { AllInOneService } from '../all-in-one.service';\nimport { IClass, IStudent } from '../Interfaces';\nimport { Resolve, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClassResolverService implements Resolve<IClass[] | string> {\n\n  constructor( private classService : AllInOneService   ,private router: Router){}\n  resolve(route: ActivatedRouteSnapshot,state: RouterStateSnapshot): Observable <IClass[] | string > {\n      return this.classService.get_Classes()\n      .pipe(catchError((err: string) => {\n              return Observable.of(err);\n      }));\n  }\n}\n","import { Observable } from 'rxjs/Observable';\nimport { AllInOneService } from '../all-in-one.service';\nimport { IStudent } from '../Interfaces';\nimport { Injectable } from '@angular/core';\nimport { RouterStateSnapshot, Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport 'rxjs/add/observable/of';\n\n@Injectable()\nexport class StudentResolverService implements Resolve<IStudent[] | string> {\n\n  constructor( private studentService: AllInOneService, private router: Router) { }\n  resolve( route: ActivatedRouteSnapshot , state: RouterStateSnapshot ): Observable <IStudent[] | string>{\n        return (this.studentService.get_students())\n        .pipe(catchError((err: string) => {\n          return Observable.of(err);\n        }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AllInOneService } from '../all-in-one.service';\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { IStudent, ISubject } from '../Interfaces';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectResolverService {\n  constructor( private subjectService: AllInOneService, private router: Router) { }\n  resolve( route: ActivatedRouteSnapshot , state: RouterStateSnapshot ): Observable <ISubject[] | string>{\n        return this.subjectService.get_Subjects()\n        .pipe(catchError((err: string) => {\n          return Observable.of(err);\n        }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AllInOneService } from '../all-in-one.service';\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ISubject, ITeacher } from '../Interfaces';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeacherResolverService {\n\n  constructor( private teacherService: AllInOneService, private router: Router) { }\n  resolve( route: ActivatedRouteSnapshot , state: RouterStateSnapshot ): Observable <ITeacher[] | string>{\n        return this.teacherService.get_Teachers()\n        .pipe(catchError((err: string) => {\n          return Observable.of(err);\n        }));\n  }\n}\n","module.exports = \"div {\\n    text-align: center;\\n}\\n\\n.container {\\n    padding-left: 30%;\\n    padding-top: 10%;\\n}\\n\\nh6 {\\n    padding-bottom: 10px;\\n}\\n\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3R1ZGVudC1kZXRhaWxzL3N0dWRlbnQtZGV0YWlscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLG9CQUFvQjtBQUN4QiIsImZpbGUiOiJzcmMvYXBwL3N0dWRlbnQtZGV0YWlscy9zdHVkZW50LWRldGFpbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImRpdiB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uY29udGFpbmVyIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDMwJTtcbiAgICBwYWRkaW5nLXRvcDogMTAlO1xufVxuXG5oNiB7XG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG59XG5cblxuXG4iXX0= */\"","import { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-student-details',\n  templateUrl: './student-details.component.html',\n  styleUrls: ['./student-details.component.css']\n})\nexport class StudentDetailsComponent implements OnInit {\n  public students;\n  public student;\n  constructor( private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.students = this.route.snapshot.data.student;\n    this.students.forEach(element => {\n          if (element._id === this.route.snapshot.params.id ) {\n            this.student = element;\n            console.log(this.student);\n          }\n\n    });\n  }\n\n\n}\n","import { catchError, map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { TokenResponse, AuthenticationService } from '../authentication.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormService {\n  private baseurl = 'api/student/';\n  private turl = 'api/teacher/';\n  private curl = 'api/class/';\n  private adurl = 'api/admin/signup';\n  private logurl = 'api/admin/login';\n  private murl = 'api/marks/';\n  private testUrl = 'api/test/create';\n  private testMarksUrl = 'api/test/';\n  private testStudents = 'api/student/test/';\n\n  constructor(private Http: HttpClient , private auth: AuthenticationService, private router: Router) { }\n\n  submitStudent(form) {\n    if (this.auth.isLoggedIn()) {\n       return this.Http.post<any>(this.baseurl + 'create', form,\n        { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.errorHandler));\n    } else {\n      this.router.navigate(['']);\n    }\n  }\n\n  submitTeacher(form) {\n    if (this.auth.isLoggedIn()) {\n      return this.Http.post<any>(this.turl + 'create', form,\n        { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.errorHandler));\n    } else {\n     this.router.navigate(['']);\n   }\n}\nupdateTeacher(form, id) {\n  if (this.auth.isLoggedIn()) {\n    return this.Http.post<any>(this.turl + id + '/update', form,\n    { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.errorHandler));\n  } else {\n   this.router.navigate(['']);\n }\n  }\n\nupdateStudent(form, id) {\n  if (this.auth.isLoggedIn()) {\n    return this.Http.post<any>(this.baseurl + id + '/update', form,\n    { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.errorHandler));\n  } else {\n   this.router.navigate(['']);\n }\n}\n\nsubmitClass(form) {\n  if (this.auth.isLoggedIn()) {\n    return this.Http.post<any>(this.curl + 'create', form,\n      { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.errorHandler));\n  } else {\n   this.router.navigate(['']);\n }\n}\nsubmitMarks(id, value) {\n  if (this.auth.isLoggedIn()) {\n    return this.Http.post<any>(this.murl + id, value,\n      { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.errorHandler));\n  } else {\n   this.router.navigate(['']);\n }\n}\n\nsignupAdmin(form) {\n  return this.Http.post<any>(this.adurl, form).pipe(catchError(this.errorHandler));\n}\nloginAdmin(form) {\n  const base = this.Http.post<any>(this.logurl, form).pipe(catchError(this.errorHandler));\n  const request = base.pipe(map((data: TokenResponse) => {\n    if (data.token) {\n      this.auth.saveToken(data.token);\n    }\n    return data;\n  })\n);\n  return request;\n}\n\ngetMarks(id) {\n  if (this.auth.isLoggedIn()) {\n    return this.Http.get<any>(this.testMarksUrl + id,\n    { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.errorHandler));\n  } else {\n   this.router.navigate(['']);\n }\n}\n\nupdateMarks(value) {\n  if (this.auth.isLoggedIn()) {\n    return this.Http.post<any>(this.murl + '/update', value,\n    { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.errorHandler));\n  } else {\n   this.router.navigate(['']);\n }\n}\n\nsubmitTest(value) {\n  if (this.auth.isLoggedIn()) {\n    return this.Http.post<any>(this.testUrl, value,\n      { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.errorHandler));\n  } else {\n   this.router.navigate(['']);\n }\n}\n// get_Students_Test(id) {\n//   if (this.auth.isLoggedIn()) {\n//     return this.Http.get<any>(this.testStudents + id,\n//       { headers: { Authorization: `Bearer ${this.auth.getToken()}` }}).pipe(catchError(this.errorHandler));\n//   } else {\n//     this.router.navigate(['']);\n\n//   }\n// }\n\nprivate errorHandler(errorResponse: HttpErrorResponse) {\n  if ( errorResponse.error instanceof ErrorEvent) {\n    console.error(`client side error : ${errorResponse.status}`);\n  } else {\n    console.error(`server side error : ${errorResponse.status}`);\n  }\n  return throwError(errorResponse.statusText);\n}\n\n\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0dWRlbnQtZm9ybS9zdHVkZW50LWZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { Student } from './student';\nimport { FormService } from './form.service';\nimport 'rxjs/add/operator/catch';\n\n\n@Component({\n  selector: 'app-student-form',\n  templateUrl: './student-form.component.html',\n  styleUrls: ['./student-form.component.css']\n})\nexport class StudentFormComponent implements OnInit {\n  public classes;\n  public student: Student;\n  public classEroor;\n  public clicked;\n  public errorMsg ;\n  constructor(private router: Router, private route: ActivatedRoute, private formService: FormService ) { }\n\n  ngOnInit() {\n            this.classEroor = true;\n            this.clicked = false;\n            this.errorMsg = false;\n            this.classes =  this.route.snapshot.data.class_;\n            this.student = new Student('' , 'default' , null, null, '', '', null);\n\n  }\n  validateClass(value) {\n    if (value === 'default') {\n         this.classEroor = true;\n    } else {\n      this.classEroor = false;\n    }\n  }\n  onSubmit() {\n    this.clicked = true;\n    this.formService.submitStudent(this.student).subscribe(\n    res => console.log('HTTP response', res),\n    err => {this.clicked = false; this.errorMsg = true; } ,\n    () => {this.router.navigate(['index']); }\n    );\n\n}\n}\n","export class Student {\n    constructor(\n      public name: string,\n      public Class : string,\n      public  roll: number,\n      public dob : Date,\n      public  father_name: string,\n      public mother_name: string,\n      public aadhar: number\n      )\n    {}\n\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0dWRlbnQtdXBkYXRlL3N0dWRlbnQtdXBkYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Student } from './../student-form/student';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport 'rxjs/add/operator/catch';\nimport { FormService } from '../student-form/form.service';\n\n\n@Component({\n  selector: 'app-student-update',\n  templateUrl: './student-update.component.html',\n  styleUrls: ['./student-update.component.css']\n})\nexport class StudentUpdateComponent implements OnInit {\n  public classes;\n  public selectedId;\n  public selectedStudent;\n  public students;\n  public student: Student;\n  public classEroor;\n  public clicked;\n  public errorMsg ;\n  constructor(private router: Router, private route: ActivatedRoute, private formService: FormService ) { }\n\n  ngOnInit() {\n            this.classEroor = false;\n            this.clicked = false;\n            this.errorMsg = false;\n            const d = new Date();\n            this.classes =  this.route.snapshot.data.class;\n            this.selectedId = this.route.snapshot.paramMap.get('id');\n            this.students = this.route.snapshot.data.student;\n            this.students.filter((user) => {\n              if (user._id === this.selectedId ) {\n                this.selectedStudent = user;\n              }\n            });\n            console.log(this.selectedStudent);\n            this.student = new Student(this.selectedStudent.name, this.selectedStudent.class._id,\n              this.selectedStudent.roll, this.selectedStudent.dob,\n              this.selectedStudent.father_name, this.selectedStudent.mother_name, this.selectedStudent.aadhar);\n  }\n  validateClass(value) {\n    if (value === 'default') {\n         this.classEroor = true;\n    } else {\n      this.classEroor = false;\n    }\n  }\n  onSubmit() {\n    this.clicked = true;\n    console.log(this.student);\n    this.formService.updateStudent(this.student, this.selectedId).subscribe(\n    res => console.log('HTTP response', res),\n    err => {this.clicked = false; this.errorMsg = true; } ,\n    () => {this.router.navigate(['students', this.selectedId]); }\n    );\n\n}\n}\n","import { AllInOneService } from './all-in-one.service';\nimport { ISdetails } from './Interfaces';\nimport { Observable } from 'rxjs';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectDetailsResolverService implements Resolve<ISdetails> {\n\n  constructor(private service: AllInOneService) { }\n  resolve( route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ISdetails> {\n    return this.service.get_Subject_Details(route.params.id);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1YmplY3QtZGV0YWlscy9zdWJqZWN0LWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","import { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-subject-details',\n  templateUrl: './subject-details.component.html',\n  styleUrls: ['./subject-details.component.css']\n})\nexport class SubjectDetailsComponent implements OnInit {\n  public teachers;\n  constructor( private route : ActivatedRoute) { }\n\n  ngOnInit() {\n    this.teachers = this.route.snapshot.data.subjectDetails.teacher;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1YmplY3QtZm9ybS9zdWJqZWN0LWZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-subject-form',\n  templateUrl: './subject-form.component.html',\n  styleUrls: ['./subject-form.component.css']\n})\nexport class SubjectFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RlYWNoZXItZGV0YWlscy90ZWFjaGVyLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","import { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-teacher-details',\n  templateUrl: './teacher-details.component.html',\n  styleUrls: ['./teacher-details.component.css']\n})\nexport class TeacherDetailsComponent implements OnInit {\n  public teachers;\n  public teacher;\n  constructor(private route : ActivatedRoute) { }\n\n  ngOnInit() {\n    this.teachers = this.route.snapshot.data.teacher;\n    this.teachers.forEach(element => {\n          if (element._id === this.route.snapshot.params.id ) {\n            this.teacher = element;\n            console.log(this.teacher);\n          }\n\n    });\n  }\n\n}\n","export class Class {\n    constructor(\n        Class: number\n    ) {}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RlYWNoZXItZm9ybS90ZWFjaGVyLWZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { Teacher } from './teacher';\nimport { FormService } from '../student-form/form.service';\nimport { Class } from './class';\n\n\n\n@Component({\n  selector: 'app-teacher-form',\n  templateUrl: './teacher-form.component.html',\n  styleUrls: ['./teacher-form.component.css']\n})\nexport class TeacherFormComponent implements OnInit {\n  public classes;\n  public subjects;\n  public classError;\n  public subjectError;\n  public teacher;\n  public clicked;\n  public errorMsg;\n  constructor(private formService: FormService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.clicked = false;\n    this.classError = false;\n    this.errorMsg = false;\n    this.teacher = new Teacher('', ['default'], 'default', null, '');\n    this.teacher.subject = 'default';\n    this.subjectError = false;\n    this.classes = this.route.snapshot.data.class_;\n    this.subjects = this.route.snapshot.data.subject;\n\n  }\n  validateClass(value) {\n    if (value === 'default') {\n      this.subjectError = true;\n    }  else {\n      this.subjectError = false;\n    }\n  }\n\n  onSubmit() {\n    this.clicked = true;\n    this.formService.submitTeacher(this.teacher).subscribe(\n    res => console.log('HTTP response', res),\n    err => {this.clicked = false; this.errorMsg = true; } ,\n    () => {this.router.navigate(['index']); }\n    );\n\n  }\n\n}\n","\nexport class Teacher{\n    constructor(\n        name: string,\n        Class: string[],\n        subject: string,\n        phone: number,\n        email: string\n    ){}\n\n    }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RlYWNoZXItdXBkYXRlL3RlYWNoZXItdXBkYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Teacher } from './../teacher-form/teacher';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormService } from '../student-form/form.service';\n\n\n@Component({\n  selector: 'app-teacher-update',\n  templateUrl: './teacher-update.component.html',\n  styleUrls: ['./teacher-update.component.css']\n})\nexport class TeacherUpdateComponent implements OnInit {\n  public teachers;\n  public selectedId;\n  public selectedTeacher;\n  public teacher;\n  public subjectError;\n  public clicked;\n  public errorMsg;\n  public classes;\n  public subjects;\n\n  constructor( private route: ActivatedRoute , private formService: FormService, private router: Router) { }\n\n  ngOnInit() {\n    this.subjectError = false;\n    this.errorMsg = false;\n    this.clicked = false;\n    this.teachers = this.route.snapshot.data.teacher;\n    this.classes = this.route.snapshot.data.class_;\n    this.subjects = this.route.snapshot.data.subject;\n    const id = this.route.snapshot.paramMap.get('id');\n    this.selectedId = id;\n    this.teachers.forEach(element => {\n      if ( this.selectedId === element._id ) {\n            this.selectedTeacher = element;\n      }\n    });\n\n    this.teacher = new Teacher(this.selectedTeacher.name, this.selectedTeacher.class._id, this.selectedTeacher.subject._id,\n      this.selectedTeacher.phone, this.selectedTeacher.email);\n    this.teacher.Class = [];\n    this.selectedTeacher.class.forEach(element => {\n        this.teacher.Class.push(element._id);\n    });\n    this.teacher.name = this.selectedTeacher.name;\n    this.teacher.subject = this.selectedTeacher.subject._id;\n    this.teacher.phone = this.selectedTeacher.phone;\n    this.teacher.email = this.selectedTeacher.email;\n\n\n    console.log(this.teacher);\n  }\n  validateClass(value) {\n    if (value === 'default') {\n      this.subjectError = true;\n    }  else {\n      this.subjectError = false;\n    }\n  }\n  onSubmit() {\n    this.clicked = true;\n    console.log(this.teacher);\n    this.formService.updateTeacher(this.teacher, this.selectedId).subscribe(\n    res => console.log('HTTP response', res),\n    err => {this.clicked = false; this.errorMsg = true; } ,\n    () => {this.router.navigate(['teachers', this.selectedId]); }\n    );\n\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3QtZm9ybS90ZXN0LWZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormService } from '../student-form/form.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Test } from './test';\n\n@Component({\n  selector: 'app-test-form',\n  templateUrl: './test-form.component.html',\n  styleUrls: ['./test-form.component.css']\n})\nexport class TestFormComponent implements OnInit {\n  errorMsg: boolean;\n  clicked: boolean;\n  public test;\n  public classes;\n  public classError;\n  constructor(private formService: FormService , private router: Router, private route: ActivatedRoute) { }\n  ngOnInit() {\n    this.errorMsg = false;\n    this.clicked = false;\n    this.test = new Test('', 'default');\n    this.classError = true;\n    this.classes = this.route.snapshot.data.class;\n}\nvalidateClass(value) {\n  if (value === 'default') {\n       this.classError = true;\n  } else {\n    this.classError = false;\n  }\n}\nonSubmit() {\nthis.clicked = true;\nconsole.log(this.test);\nthis.formService.submitTest(this.test).subscribe(\n  (data) => {this.router.navigateByUrl('tests/' + data._id);},\n  (err) => {this.clicked = false; this.errorMsg = true; } ,\n);\n}\n\n}\n","export class Test {\n    constructor(public name: string,\n                public Class: string) {}\n\n}\n","import { Observable } from 'rxjs/Observable';\nimport { Resolve, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\nimport { FormService } from './student-form/form.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestMarksResolverService implements Resolve<any> {\n\n  constructor(private service : FormService) { }\n  resolve(route : ActivatedRouteSnapshot , state: RouterStateSnapshot): Observable<any>{\n    return this.service.getMarks(route.params.id);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3QtbWFya3MvdGVzdC1tYXJrcy5jb21wb25lbnQuY3NzIn0= */\"","import { FormService } from './../student-form/form.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test-marks',\n  templateUrl: './test-marks.component.html',\n  styleUrls: ['./test-marks.component.css']\n})\nexport class TestMarksComponent implements OnInit {\n  public marks;\n  public rowData;\n  public Information = [];\n  public columnDefs;\n  public id;\n  public clicked;\n  public errorMsg;\n  constructor(private route: ActivatedRoute, private service: FormService, private router: Router) { }\n\n  ngOnInit() {\n    this.clicked = false;\n    this.errorMsg = false;\n    this.id = this.route.snapshot.params.id;\n    this.Information = this.route.snapshot.data.marks.marks;\n    this.columnDefs = [\n      {headerName: 'name', field: 'name', hide: true},\n      {headerName: 'class', field: 'class', hide: true},\n      {headerName: 'test', field: 'test', hide: true},\n      {headerName: 'Name', field: 'Name'},\n      {headerName: 'Class', field: 'Class', width: 70, },\n      {headerName: 'Telugu', field: 'telugu', editable: true , width: 70 , cellClass: 'number-cell'},\n      {headerName: 'Hindi', field: 'hindi', editable: true, width: 70, cellClass: 'number-cell'},\n      {headerName: 'English', field: 'english', editable: true, width: 70, cellClass: 'number-cell'},\n      {headerName: 'Maths', field: 'maths', editable: true, width: 70, cellClass: 'number-cell'},\n      {headerName: 'Natural science', field: 'natural_science', width: 120, editable: true, cellClass: 'number-cell'},\n      {headerName: 'Physics', field: 'physics', editable: true, width: 70, cellClass: 'number-cell'},\n      {headerName: 'Social', field: 'social', editable: true, width: 70, cellClass: 'number-cell'},\n      {headerName: 'Total', field: 'total', editable: true, width: 70, cellClass: 'number-cell',\n      valueGetter: function aPlusBValueGetter(params) {\n        return(parseInt(params.data.telugu, 10) + parseInt(params.data.hindi, 10) +\n        parseInt(params.data.english, 10) + parseInt(params.data.maths, 10) + parseInt(params.data.natural_science, 10)\n        + parseInt(params.data.physics, 10) + parseInt(params.data.social, 10));\n      }}\n  ];\n    this.rowData = [];\n    console.log(this.Information);\n    if (this.Information.length === 0) {\n      this.Information = this.route.snapshot.data.marks.student;\n      console.log(this.Information);\n      this.Information.forEach(element2 => {\n        this.rowData.push({test: this.id,name: element2._id,\n          class: element2.class._id, Name: element2.name, Class: element2.class.class\n          });\n      });\n    } else {\n    this.Information.forEach(element => {\n        this.rowData.push({test: element.test,Name: element.name.name,\n           Class: element.class.class, name: element.name._id, class: element.class._id,\n          telugu: element.telugu, hindi: element.hindi, english: element.english, maths: element.maths,\n          natural_science: element.natural_science, physics: element.physics, social: element.social});\n      });\n    }\n\n  }\n  onSubmit() {\n      this.clicked= true;\n      this.service.submitMarks(this.id, this.rowData).subscribe(\n        res => console.log('HTTP response', res),\n        err => {this.clicked = false; this.errorMsg = true; } ,\n        () => { this.clicked = false;}\n      );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}